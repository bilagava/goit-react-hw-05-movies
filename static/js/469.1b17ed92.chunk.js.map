{"version":3,"file":"static/js/469.1b17ed92.chunk.js","mappings":"2NACA,EAAsB,kBAAtB,EAAqD,yBAArD,EAA0F,wBAA1F,EAA2H,qBAA3H,EAA0J,sB,kBCK3I,SAASA,IACtB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAiBN,GACdO,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACP,OAAOJ,EAAUI,MAElBC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,QAC7B,CAACV,IAuBJ,OAAO,eAAIa,UAAWC,EAAf,SArBW,WAChB,KAAIX,EAAOY,OAAS,GAGpB,OAAOZ,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,GAAlC,OAChB,gBAAaP,UAAWC,EAAxB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBACED,UAAWC,EACXO,IAAKJ,EAAeK,EAAAA,GAAWL,EAAeM,EAC9CC,IAAKN,OAGT,iBAAKL,UAAWC,EAAhB,UACGI,GACD,uCAAeC,UAVVC,MAgB0BK,O,oBCvCzC,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,MACjB,MAAOzB,GAEP,YADAmB,EAAOnB,GAILwB,EAAKE,KACPR,EAAQO,GAERE,QAAQT,QAAQO,GAAO5B,KAAKuB,EAAOC,GAIxB,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,GAGlE,SAASJ,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,GAGnEf,OAAMgB,O,+KC/BNC,EAAU,mCACHzB,EAAW,kCAGjB,SAAe0B,IAAtB,4CAAO,OAAP,cAAO,sGACaC,MAAM,2DAAD,OACsCF,IAFxD,cACCG,EADD,gBAIcA,EAAIC,OAJlB,cAICjB,EAJD,yBAKEA,GALF,kEAQA,SAAekB,EAAtB,+CAAO,OAAP,cAAO,WAAiChC,GAAjC,yFACa6B,MAAM,sCAAD,OACiB7B,EADjB,oBAC+B2B,EAD/B,oBADlB,cACCG,EADD,gBAIcA,EAAIC,OAJlB,cAICjB,EAJD,yBAKEA,GALF,kEAQA,SAAe5B,EAAtB,+CAAO,OAAP,cAAO,WAAgCc,GAAhC,yFACa6B,MAAM,sCAAD,OACiB7B,EADjB,4BACuC2B,EADvC,oBADlB,cACCG,EADD,gBAIcA,EAAIC,OAJlB,cAICjB,EAJD,yBAKEA,GALF,kEAQA,SAAemB,EAAtB,+CAAO,OAAP,cAAO,WAA4BjC,GAA5B,yFACa6B,MAAM,sCAAD,OACiB7B,EADjB,4BACuC2B,EADvC,2BADlB,cACCG,EADD,gBAIcA,EAAIC,OAJlB,cAICjB,EAJD,yBAKEA,GALF,kEAQA,SAAeoB,EAAtB,+CAAO,OAAP,cAAO,WAAgCnB,GAAhC,yFACac,MAAM,qDAAD,OACgCF,EADhC,iCACgEZ,EADhE,gCADlB,cACCe,EADD,gBAIcA,EAAIC,OAJlB,cAICjB,EAJD,yBAKEA,GALF,oE","sources":["webpack://react-homework-template/./src/pages/MovieDetails/Cast/Cast.module.css?fa93","pages/MovieDetails/Cast/Cast.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/services.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"img\":\"Cast_img__IvGfL\",\"actorsList\":\"Cast_actorsList__1g63G\",\"actorItem\":\"Cast_actorItem__eOL2Z\",\"imgBox\":\"Cast_imgBox__aLseI\",\"textBox\":\"Cast_textBox__bVwSo\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieActors, BASE_URL } from '../../../services/services';\nimport css from './Cast.module.css';\nimport defaultImage from '../../../images/defaultImage.jpg';\n\nexport default function Cast() {\n  const { moviesId } = useParams();\n  const [actors, setActors] = useState([]);\n\n  useEffect(() => {\n    fetchMovieActors(moviesId)\n      .then(({ cast }) => {\n        return setActors(cast);\n      })\n      .catch(error => console.log(error));\n  }, [moviesId]);\n\n  const getActors = () => {\n    if (actors.length < 1) {\n      return;\n    }\n    return actors.map(({ profile_path, name, character, id }) => (\n      <li key={id} className={css.actorItem}>\n        <div className={css.imgBox}>\n          <img\n            className={css.img}\n            src={profile_path ? BASE_URL + profile_path : defaultImage}\n            alt={name}\n          />\n        </div>\n        <div className={css.textBox}>\n          {name}\n          <p>Character: {character}</p>\n        </div>\n      </li>\n    ));\n  };\n\n  return <ul className={css.actorsList}>{getActors()}</ul>;\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '4023fc4c5ca1260d3fd50ec2a2da6087';\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n// https://api.themoviedb.org/3/\n\nexport async function fetchTrending() {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  const info = await res.json();\n  return info;\n}\n\nexport async function fetchMovieDetails(id) {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  const info = await res.json();\n  return info;\n}\n\nexport async function fetchMovieActors(id) {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const info = await res.json();\n  return info;\n}\n\nexport async function fetchReviews(id) {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const info = await res.json();\n  return info;\n}\n\nexport async function fetchSearchMovie(value) {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${value}&page=1&include_adult=false`\n  );\n  const info = await res.json();\n  return info;\n}\n"],"names":["Cast","moviesId","useParams","useState","actors","setActors","useEffect","fetchMovieActors","then","cast","catch","error","console","log","className","css","length","map","profile_path","name","character","id","src","BASE_URL","defaultImage","alt","getActors","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","fetchTrending","fetch","res","json","fetchMovieDetails","fetchReviews","fetchSearchMovie"],"sourceRoot":""}