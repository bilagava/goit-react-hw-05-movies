{"version":3,"file":"static/js/269.de9b567a.chunk.js","mappings":"oOAIe,SAASA,IACtB,IAAQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaN,GAAUO,MAAK,SAAAC,GAC1B,OAAOJ,EAAWI,EAAKC,cAExB,CAACT,IAEGG,EAAQO,OAAS,GACtB,oEAEA,wBACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,2BACE,qCAAaF,MACb,uBAAIC,MAFGC,U,oBCnBjB,SAASC,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAId,EAAOQ,EAAIK,GAAKC,GAChBC,EAAQf,EAAKe,MACjB,MAAOC,GAEP,YADAN,EAAOM,GAILhB,EAAKiB,KACPR,EAAQM,GAERG,QAAQT,QAAQM,GAAOhB,KAAKY,EAAOC,GAIxB,SAASO,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIN,SAAQ,SAAUT,EAASC,GACpC,IAAIF,EAAMY,EAAGK,MAAMJ,EAAME,GAEzB,SAASZ,EAAMI,GACbR,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQG,GAGlE,SAASH,EAAOc,GACdnB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASc,GAGnEf,OAAMgB,O,+KC/BNC,EAAU,mCAEHC,EAAW,kCAEjB,SAAeC,IAAtB,4CAAO,OAAP,cAAO,sGACaC,MAAM,2DAAD,OACsCH,IAFxD,cACCI,EADD,gBAIcA,EAAIC,OAJlB,cAICjC,EAJD,yBAKEA,GALF,kEAQA,SAAekC,EAAtB,+CAAO,OAAP,cAAO,WAAiC5B,GAAjC,yFACayB,MAAM,sCAAD,OACiBzB,EADjB,oBAC+BsB,EAD/B,oBADlB,cACCI,EADD,gBAIcA,EAAIC,OAJlB,cAICjC,EAJD,yBAKEA,GALF,kEAQA,SAAemC,EAAtB,+CAAO,OAAP,cAAO,WAAgC7B,GAAhC,yFACayB,MAAM,sCAAD,OACiBzB,EADjB,4BACuCsB,EADvC,oBADlB,cACCI,EADD,gBAIcA,EAAIC,OAJlB,cAICjC,EAJD,yBAKEA,GALF,kEAQA,SAAeF,EAAtB,+CAAO,OAAP,cAAO,WAA4BQ,GAA5B,yFACayB,MAAM,sCAAD,OACiBzB,EADjB,4BACuCsB,EADvC,2BADlB,cACCI,EADD,gBAIcA,EAAIC,OAJlB,cAICjC,EAJD,yBAKEA,GALF,kEAQA,SAAeoC,EAAtB,+CAAO,OAAP,cAAO,WAAgCrB,GAAhC,yFACagB,MAAM,qDAAD,OACgCH,EADhC,iCACgEb,EADhE,gCADlB,cACCiB,EADD,gBAIcA,EAAIC,OAJlB,cAICjC,EAJD,yBAKEA,GALF","sources":["pages/MovieDetails/Reviews/Reviews.jsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/services.jsx"],"sourcesContent":["import { fetchReviews } from '../../../services/services';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nexport default function Reviews() {\n  const { moviesId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(moviesId).then(info => {\n      return setReviews(info.results);\n    });\n  }, [moviesId]);\n\n  return reviews.length < 1 ? (\n    <p>We dont have any reviews for this movie</p>\n  ) : (\n    <ul>\n      {reviews.map(({ author, content, id }) => (\n        <li key={id}>\n          <h2>Author: {author}</h2>\n          <p>{content}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const API_KEY = '4023fc4c5ca1260d3fd50ec2a2da6087';\n\nexport const BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nexport async function fetchTrending() {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`\n  );\n  const info = await res.json();\n  return info;\n}\n\nexport async function fetchMovieDetails(id) {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  const info = await res.json();\n  return info;\n}\n\nexport async function fetchMovieActors(id) {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  const info = await res.json();\n  return info;\n}\n\nexport async function fetchReviews(id) {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  const info = await res.json();\n  return info;\n}\n\nexport async function fetchSearchMovie(value) {\n  const res = await fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&language=en-US&query=${value}&page=1&include_adult=false`\n  );\n  const info = await res.json();\n  return info;\n}\n"],"names":["Reviews","moviesId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","then","info","results","length","map","author","content","id","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","value","error","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","API_KEY","BASE_URL","fetchTrending","fetch","res","json","fetchMovieDetails","fetchMovieActors","fetchSearchMovie"],"sourceRoot":""}